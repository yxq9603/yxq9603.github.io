{"meta":{"title":"Y&T","subtitle":null,"description":null,"author":"Y&T","url":"https://yxq9603.github.io","root":"/"},"pages":[{"title":"categories","date":"2019-09-19T02:02:11.000Z","updated":"2019-09-19T13:18:23.080Z","comments":true,"path":"categories/index.html","permalink":"https://yxq9603.github.io/categories/index.html","excerpt":"","text":""},{"title":"about","date":"2019-09-19T02:03:02.000Z","updated":"2019-09-20T01:26:34.544Z","comments":true,"path":"about/index.html","permalink":"https://yxq9603.github.io/about/index.html","excerpt":"","text":"项目简述：- 基于Python的简易国标麻将对战平台联系方式：Email： yxq9603@163.com"},{"title":"tags","date":"2019-09-19T01:59:45.000Z","updated":"2019-09-19T02:01:51.841Z","comments":true,"path":"tags/index.html","permalink":"https://yxq9603.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"本地项目上传Github","slug":"本地项目上传Github","date":"2019-09-18T05:50:23.000Z","updated":"2019-09-19T13:11:52.463Z","comments":true,"path":"2019/09/18/本地项目上传Github/","link":"","permalink":"https://yxq9603.github.io/2019/09/18/本地项目上传Github/","excerpt":"","text":"1. 前期准备 下载Git并配置SSH key 1.1 配置SSH key使用SSH key来解决本地和服务器的连接问题。使用Git bash执行命令： &amp; cd ~/. ssh # 检查本机已存在的ssh密钥 如果提示：No such file or directory 说明你是第一次使用git。 &amp; ssh–keygen -t rsa -C “xxx@xxx.com“ # 填入自己github所用邮箱 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：将复制的内容填入key,保存。 1.2 测试 &amp; ssh -T git@github.com # 注意邮箱地址不用改 如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到： Hi yxq9603! You’ve successfully authenticated, but GitHub does not provide shell access. 看到这个信息说明SSH已配置成功！ 此时你还需要配置： $ git config –global user.name “liuxianan” # 你的github用户名，非昵称$ git config –global user.email “xxx@qq.com“ # 填写你的github注册邮箱 2. 新建仓库如图新建仓库 在跳转页面按如下复制仓库地址 3. 本地操作3.1 方法一在要上传的项目文件下打开Git bash，执行： &amp; git init&amp; git add .&amp; git commit -m”备注信息” (首次使用)关联本地和远程仓库： &amp; git remote add origin https://github.com/yxq9603/test.git 关联成功后，可以将内容推送到远程仓库： &amp; git push -u origin master # 首次加 -u 之后可以不加 如报错:执行： &amp; git pull –rebase origin master 再次push 3.2 方法二在要上传的项目文件下打开Git bash，把远程仓库克隆到本地，执行： &amp; git clone https://github.com/yxq9603/Mahjong.git 这个步骤以后你的本地项目文件夹下面就会多出个文件夹，该文件夹名即为你github上面的项目名,把本地项目文件夹下的所有文件（除了新多出的那个文件夹不用），其余都复制到那个新多出的文件夹下进入Mahjong文件夹 &amp; cd Mahjong 执行： &amp; git add .&amp; git commit -m”备注信息”&amp; git push -u origin master # 首次执行需要输入Github账号密码 参考","categories":[{"name":"Github","slug":"Github","permalink":"https://yxq9603.github.io/categories/Github/"}],"tags":[{"name":"Github","slug":"Github","permalink":"https://yxq9603.github.io/tags/Github/"}]},{"title":"基于Github搭建博客","slug":"基于Github搭建博客","date":"2019-09-18T04:40:42.000Z","updated":"2019-09-19T13:34:13.033Z","comments":true,"path":"2019/09/18/基于Github搭建博客/","link":"","permalink":"https://yxq9603.github.io/2019/09/18/基于Github搭建博客/","excerpt":"","text":"1. 前言自行注册或安装以下条目： Github账号 Node.js(配套自动安装npm)，推荐使用nvm安装 git 2. Githut配置2.1 地址创建如图新建仓库，仓库名格式：accountname.github.io之后可直接通过：xxx.github.io访问博客 2.2 配置SSH key 参考“本地项目上传Github” 3. hexo安装配置3.1 hexo简介Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。 官网 3.2 安装","categories":[{"name":"Github","slug":"Github","permalink":"https://yxq9603.github.io/categories/Github/"}],"tags":[{"name":"Github","slug":"Github","permalink":"https://yxq9603.github.io/tags/Github/"}]},{"title":"Y&T","slug":"Y-T","date":"2019-09-16T16:30:32.000Z","updated":"2019-09-19T16:34:04.379Z","comments":true,"path":"2019/09/17/Y-T/","link":"","permalink":"https://yxq9603.github.io/2019/09/17/Y-T/","excerpt":"","text":"","categories":[{"name":"Y&T","slug":"Y-T","permalink":"https://yxq9603.github.io/categories/Y-T/"}],"tags":[{"name":"Y&T","slug":"Y-T","permalink":"https://yxq9603.github.io/tags/Y-T/"}]}]}